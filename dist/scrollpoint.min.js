/*!
 * angular-ui-scrollpoint
 * https://github.com/angular-ui/ui-scrollpoint
 * Version: 1.2.1 - 2015-11-26T20:18:50.723Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint",[]).directive("uiScrollpoint",["$window",function(t){function o(){if(angular.isDefined(t.pageYOffset))return t.pageYOffset;var o=document.compatMode&&"BackCompat"!==document.compatMode?document.documentElement:document.body;return o.scrollTop}function i(o){return o?t.document.body.scrollHeight-t.innerHeight:t.innerHeight}return{require:["uiScrollpoint","^?uiScrollpointTarget"],scope:{uiScrollpoint:"@",uiScrollpointClass:"@?",uiScrollpointAction:"&?",uiScrollpointBottom:"@?"},controller:function(){this.enabled=!0,this.absolute=!0,this.percent=!1,this.shift=0,this.past=void 0,this.bottom=void 0,this.hasTarget=!1,this.$target=void 0,this.scrollpointClass="ui-scrollpoint",this.action=void 0,this.getScrollOffset=function(){return this.hasTarget?this.$target[0].scrollTop:o()}},link:function(n,e,s,l){function r(t){if(t){if("string"==typeof t)if(h.percent="%"==t.charAt(t.length-1),h.percent&&(t=t.substr(0,t.length-1)),"-"===t.charAt(0))h.absolute=h.percent,h.shift=-parseFloat(t.substr(1));else if("+"===t.charAt(0))h.absolute=h.percent,h.shift=parseFloat(t.substr(1));else{var o=parseFloat(t);!isNaN(o)&&isFinite(o)&&(h.absolute=!0,h.shift=o)}else if("number"==typeof t)return t=t.toString(),void r(t)}else h.absolute=!1;m=c()}function c(){var t=h.absolute?h.shift:a()+h.shift;return h.percent&&h.absolute?(t=h.shift/100*p(),h.bottom&&(t=p()-t)):h.bottom&&(t=h.absolute?p()-t:t+e[0].offsetHeight+1-u()),t}function a(){if(!g){var t=e[0].getBoundingClientRect();return t.top+o()}return e[0].offsetTop}function u(){return g?h.$target[0].offsetHeight:i()}function p(){return g?h.$target[0].scrollHeight-h.$target[0].clientHeight:i(!0)}function f(){if(h.enabled){var t=c(),o=h.getScrollOffset(),i=null,s=angular.isUndefined(h.past);!h.bottom&&o>=t||h.bottom&&t>=o?(h.past||(i=t-o,h.past=!0),e.hasClass(h.scrollpointClass)||e.addClass(h.scrollpointClass),m=t):(!h.bottom&&m>o||h.bottom&&o>m)&&((h.past||s)&&(i=m-o,h.past=!1),e.hasClass(h.scrollpointClass)&&e.removeClass(h.scrollpointClass)),h.action&&angular.isFunction(h.action)&&null!==i&&(s?h.action(e,i*(h.bottom?-1:1)):n.$apply(function(){h.action(e,i*(h.bottom?-1:1))}))}}function d(){e.removeClass(h.scrollpointClass),h.past=void 0,m=c(),f()}var h=l[0],g=l[1];h.bottom=n.uiScrollpointBottom,h.hasTarget=g?!0:!1,h.$target=g&&g.$element||angular.element(t),h.scrollpointClass=n.uiScrollpointClass||"ui-scrollpoint",h.action=n.uiScrollpointAction?n.uiScrollpointAction():void 0;var m;r(n.uiScrollpoint),n.$on("scrollpointShouldReset",d),h.$target.on("scroll",f),e.ready(f),n.$on("$destroy",function(){h.$target.off("scroll",f)}),n.$watch("uiScrollpoint",function(t){r(t),f()})}}}]).directive("uiScrollpointTarget",[function(){return{controller:["$element",function(t){this.$element=t}]}}]).directive("uiScrollpointPin",["$compile",function(t){return{restrict:"A",require:"uiScrollpoint",priority:400,link:function(o,i,n,e){function s(){if(r){var t=i,o=e.getScrollOffset();t.css("top",o-c+"px")}}var l,r,c=0,a={};e.action&&(l=e.action),e.action=function(i,n){0>=n&&!r&&(c=e.getScrollOffset()-i[0].offsetTop+n*(e.bottom?-1:1),r=i.clone(),r.css("visibility","hidden"),i.after(r),r.removeAttr("ui-scrollpoint-pin"),r.attr("ui-scrollpoint-action","unpinIt"),o.unpinIt=function(t,o){o>0&&r&&(e.$target.off("scroll",s),e.enabled=!0,i.removeClass("pinned"),i.css("position",a.position),i.css("top",a.top),r.remove(),r=void 0)},t(r)(o),e.enabled=!1,a.position=i.css("position"),a.top=i.css("top"),i.addClass("pinned"),i.css("position","absolute"),e.$target.on("scroll",s),s()),l&&angular.isFunction(l)&&l(i,n)}}}}])}();