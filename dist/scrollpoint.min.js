/*!
 * angular-ui-scrollpoint
 * https://github.com/angular-ui/ui-scrollpoint
 * Version: 1.2.0 - 2015-11-15T16:05:13.832Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint",[]).directive("uiScrollpoint",["$window",function(o){function t(){if(angular.isDefined(o.pageYOffset))return o.pageYOffset;var t=document.compatMode&&"BackCompat"!==document.compatMode?document.documentElement:document.body;return t.scrollTop}function i(){return o.innerHeight}return{require:"^?uiScrollpointTarget",scope:{uiScrollpoint:"@",uiScrollpointClass:"@?",uiScrollpointAction:"&?",uiScrollpointBottom:"@"},link:function(n,e,l,r){function c(o){if(o){if("string"==typeof o)if("-"===o.charAt(0))a=!1,p=-parseFloat(o.substr(1));else if("+"===o.charAt(0))a=!1,p=parseFloat(o.substr(1));else{var t=parseFloat(o);!isNaN(t)&&isFinite(t)&&(a=!0,p=t)}else if("number"==typeof o)return void c(o.toString())}else a=!1;f=a?n.uiScrollpoint:e[0].offsetTop+p}function u(){var o=a?n.uiScrollpoint:e[0].offsetTop+p,l=r?S[0].scrollTop:t(),c=null;if(m){var u=r?S[0].offsetHeight:i();o+=e[0].offsetHeight+1,l+=u}!m&&l>o||m&&o>l?(d||(c=o-l,d=!0),e.hasClass(g)||e.addClass(g),f=o):(!m&&f>l||m&&l>f)&&(d&&(c=f-l,d=!1),e.hasClass(g)&&e.removeClass(g)),h&&null!==c&&h(e,c*(m?-1:1))}function s(){e.removeClass(g),d=m,f=(a?n.uiScrollpoint:e[0].offsetTop+p)+(m?e[0].offsetHeight+1:0),u()}var f,a=!0,p=0,d=!1,m=n.uiScrollpointBottom,S=r&&r.$element||angular.element(o),g=n.uiScrollpointClass||"ui-scrollpoint",h=n.uiScrollpointAction?n.uiScrollpointAction():void 0;c(n.uiScrollpoint),n.$on("scrollpointShouldReset",s),S.on("scroll",u),u(),n.$on("$destroy",function(){S.off("scroll",u)}),n.$watch("uiScrollpoint",function(o){c(o),u()})}}}]).directive("uiScrollpointTarget",[function(){return{controller:["$element",function(o){this.$element=o}]}}])}();